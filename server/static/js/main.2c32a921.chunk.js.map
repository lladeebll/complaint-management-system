{"version":3,"sources":["customHooks/UseForm.js","components/RegistrationForm.js","pages/RegistrationPage.js","components/LoginForm.js","pages/LoginPage.js","components/AddComplaint.js","components/ListItem.js","components/ComplaintList.js","components/SearchComponent.js","components/FilterComponent.js","pages/HomePage.js","components/EditComplaint.js","components/ResubmitComplaint.js","components/RatingComponent.js","components/EditStatusComponent.js","components/BackButton.js","components/DeleteComplaint.js","pages/ComplaintPage.js","components/NavBar.js","App.js","reportWebVitals.js","index.js"],"names":["useForm","initialValues","useState","values","setValues","e","target","name","value","RegistrationForm","loginFunct","setActor","navigate","useNavigate","userName","password","repeatPassword","phno","email","actor","handleChange","username","repeatpassword","final","errors","setErrors","url","data","a","fetch","method","headers","body","JSON","stringify","response","json","Form","onSubmit","console","log","preventDefault","usernameError","passwordError","nameError","phnoError","emailError","repeatPasswordError","length","match","postData","then","x","variant","localStorage","setItem","accessToken","replace","className","Select","onChange","Group","Label","Control","type","placeholder","isInvalid","Feedback","Button","RegistrationPage","LoginForm","LoginPage","AddComplaint","initialCall","departments","routeLogin","postComplaint","getItem","status","useEffect","title","depId","description","department","show","setShow","handleClose","departmentError","titleError","descriptionError","res","onClick","Modal","onHide","centered","size","Header","closeButton","Title","Body","FloatingLabel","label","map","as","style","height","Footer","ListItem","complaint","deleteFunct","ComplaintList","list","complaints","to","SearchComponent","props","InputGroup","Text","icon","faSearch","FormControl","nameChange","FilterComponent","Check","inline","id","defaultChecked","statusChange","HomePage","logoutFunct","setlist","rating","setrating","search","setsearch","pending","onProcess","resolved","rejected","filter","setfilter","filteredlist","setfilteredlist","setdepartments","prevstate","checked","complaints1","toLowerCase","startsWith","getComplaint","getDepartments","list1","departments1","filterComplaints","Row","Col","sm","OverlayTrigger","placement","overlay","Tooltip","avgRating","toFixed","count","edit","isHalf","activeColor","EditComplaint","obj","complaint_id","postEdit","logID","ResubmitComplaint","resubmit","comment","setResubmit","submitRating","postResubmit","RatingComponent","setRating","stars","postRating","checkRating","Card","newRating","EditStatusComponent","setStatus","postEditStatus","getStatus","initFunct","BackButton","class","DeleteComplaint","postDelete","message","ComplaintPage","setComplaint","postDescription","feedback","setId","location","useLocation","id1","split","NavBar","Navbar","collapseOnSelect","expand","bg","Brand","Link","Toggle","Collapse","Nav","App","setlog","logoutPost","Container","path","element","clear","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2c32a921.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nexport const useForm    =   (initialValues )    =>  {\n    const [values,  setValues] =   useState(initialValues);\n    return [values,\n    e=>{\n        setValues({...values,[e.target.name]: e.target.value})\n    }\n    ]\n}","import React from 'react'\nimport { useForm } from '../customHooks/UseForm';\nimport { Form, Button } from 'react-bootstrap';\nimport {useNavigate } from 'react-router-dom';\nimport { useState } from \"react\";\n\n\nconst RegistrationForm = ({loginFunct,setActor}) => {\n    let navigate = useNavigate();\n\n    const baseAddress='/register'\n\n    function routeHome() {\n        navigate(\"../home/\", { replace: true });\n      }\n      \n\n    const [values,  handleChange]   =   useForm({\n        name:\"\",\n        userName:\"\",\n        password:\"\",\n        repeatPassword:\"\",\n        phno:\"\",\n        email:\"\",\n        actor:\"student\"\n    })\n\n    const [errors,setErrors] = useState({\n        name:\"\",\n        username:\"\",\n        password:\"\",\n        repeatpassword:\"\",\n        phno:\"\",\n        email:\"\",\n        final:\"\"\n    })\n\n    function ValidateEmail(inputEmail)\n    {\n    var mailformat = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n    if(inputEmail.match(mailformat))\n        return true;\n\n    return false;\n    }\n\n    // const accessToken='';\n    const onSubmit   =   (e)  =>\n    {\n        console.log(values);\n        e.preventDefault()\n        // let n=values.password.length\n        // console.log(n);\n        let usernameError=\"\",passwordError =\"\",nameError=\"\",phnoError=\"\",emailError=\"\",repeatPasswordError=\"\";\n\n        if(values.actor==='student')\n        {\n            \n\n            if(values.phno===\"\")\n                phnoError=\"This field is required\";\n            else if(values.phno.length!==10)\n                phnoError=\"Enter a valid phone number\";\n\n            if(values.email===\"\")\n                emailError=\"This field is required\";\n            else if(!ValidateEmail(values.email))\n                emailError=\"Enter a valid email\";  \n\n        }\n        if(values.userName===\"\")\n            usernameError=\"This field is required\";\n        else if(values.userName.length<5)\n            usernameError=\"Minimum 5 characters required\";\n\n        if(values.name===\"\")\n            nameError=\"This field is required\";\n\n        if(values.password===\"\")\n            passwordError=\"This field is required\";\n        if(values.repeatPassword===\"\")\n            repeatPasswordError=\"This field is required\";\n        if(values.password!==\"\"&&values.repeatPassword!==\"\"){\n            if(values.password!==values.repeatPassword)\n                repeatPasswordError=\"Passwords do not match\";\n            else if(values.password.length<8)\n                passwordError=\"Minimum 8 characters required\";\n        }\n\n        setErrors({\n            name:nameError,\n            username:usernameError,\n            password:passwordError,\n            repeatpassword:repeatPasswordError,\n            phno:phnoError,\n            email:emailError\n        });\n\n        \n        if(usernameError===\"\"&&passwordError ===\"\"&&nameError===\"\"&&phnoError===\"\"&&emailError===\"\"&&repeatPasswordError===\"\"){\n            let data={};\n            console.log(values);\n            if(values.actor==='student')\n            {\n                data={\n                    actor:values.actor,\n                    userName:values.userName,\n                    name:values.name,\n                    phno:values.phno,\n                    email:values.email,\n                    password:values.password\n                };\n            }\n            else\n            {\n                data={\n                    actor:values.actor,\n                    userName:values.userName,\n                    name:values.name,\n                    password:values.password\n                }\n            }\n            \n            postData(baseAddress,data).then(x=>{\n                if(x.variant==='success')\n                {\n                    // accessToken=x.accessToken;\n                    localStorage.setItem('accessToken',x.accessToken);\n                    localStorage.setItem('actor',values.actor);\n                    setActor(values.actor);\n                    loginFunct();\n                    routeHome();\n                }\n                else\n                {\n                    setErrors({\n                        final:\"* Username already exists\"\n                    });\n                }\n\n            })\n        }\n        \n        \n        \n\n    \n    // Alert('nlk')\n        \n\n    }\n    async function postData(url, data) {\n        // Default options are marked with *\n        const response = await fetch(url, {\n          method: 'POST', // *GET, POST, PUT, DELETE, etc.\n          headers: {\n            'Content-Type': 'application/json'\n            // 'Content-Type': 'application/x-www-form-urlencoded',\n          },\n          body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n        });\n        return response.json(); // parses JSON response into native JavaScript objects\n      }\n    return (\n        <Form onSubmit={onSubmit} className=\"w-25 m-auto mt-5\">\n            <Form.Select className=\"mb-3\" name=\"actor\" value={values.actor} onChange={handleChange} >\n                <option value=\"student\">Student</option>\n                <option value=\"department\">Department</option>\n            </Form.Select>\n            <Form.Group className=\"mb-3\">\n                <Form.Label>Name</Form.Label>\n                <Form.Control type=\"text\" onChange={handleChange} name=\"name\" value={values.name}  placeholder=\"Name\"  isInvalid={!!errors.name}/>\n                <Form.Control.Feedback type=\"invalid\">\n                    {errors.name}\n                </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group className={`mb-3 `}>\n                <Form.Label>Username</Form.Label>\n                <Form.Control type=\"text\" onChange={handleChange} name=\"userName\" value={values.userName} placeholder=\"Username\"  isInvalid={!!errors.username}/>\n                <Form.Control.Feedback type=\"invalid\">\n                    {errors.username}\n                </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group className={`mb-3 ${values.actor===\"student\"?\"\":\"d-none\"}`}>\n                <Form.Label>Phone no</Form.Label>\n                <Form.Control type=\"number\" onChange={handleChange} name=\"phno\" value={values.phno} placeholder=\"Phone no\"  isInvalid={!!errors.phno}/>\n                <Form.Control.Feedback type=\"invalid\">\n                    {errors.phno}\n                </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group className={`mb-3 ${values.actor===\"student\"?\"\":\"d-none\"}`}>\n                <Form.Label>Email</Form.Label>\n                <Form.Control type=\"text\" onChange={handleChange} name=\"email\" value={values.email} placeholder=\"Email\"  isInvalid={!!errors.email}/>\n                <Form.Control.Feedback type=\"invalid\">\n                    {errors.email}\n                </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group className=\"mb-3\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control type=\"password\" onChange={handleChange} name=\"password\" value={values.password}  placeholder=\"Password\"  isInvalid={!!errors.password}/>\n                <Form.Control.Feedback type=\"invalid\">\n                    {errors.password}\n                </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group className=\"mb-3\">\n                <Form.Label>Confirm Password</Form.Label>\n                <Form.Control type=\"password\" onChange={handleChange} name=\"repeatPassword\" value={values.repeatPassword}  placeholder=\"Confirm Password\"  isInvalid={!!errors.repeatpassword}/>\n                <Form.Control.Feedback type=\"invalid\">\n                    {errors.repeatpassword}\n                </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group className=\"position-absolute\">\n                <Form.Control className=\"d-none\" isInvalid={!!errors.final}/>\n                <Form.Control.Feedback type=\"invalid\">\n                    {errors.final}\n                </Form.Control.Feedback>\n            </Form.Group>\n            <Button variant=\"primary\" type=\"submit\" className=\"mt-4\">\n                Submit\n            </Button>\n        </Form>\n    )\n}\n\n\nexport default RegistrationForm\n","import RegistrationForm from '../components/RegistrationForm'\n\nconst RegistrationPage = ({loginFunct,setActor}) => {\n    return (\n        <div className=\"d-flex justify-content-center\">\n            <RegistrationForm   loginFunct={loginFunct} setActor={(actor=>setActor(actor))}></RegistrationForm>\n        </div>\n    )\n}\n\nexport default RegistrationPage\n","import { useForm } from \"../customHooks/UseForm\"\nimport { Form, Button } from 'react-bootstrap';\nimport { useNavigate } from \"react-router\";\nimport { useState } from \"react\";\n\nconst LoginForm = ({loginFunct,setActor}) => {\n    const navigate=useNavigate()\n    const baseAddress='/login'\n\n    const [values,  handleChange]   =   useForm({\n        userName:\"\",\n        password:\"\",\n        actor:\"student\"\n    })\n\n    const [errors,setErrors] = useState({\n        username:\"\",\n        password:\"\",\n        final:\"\"\n    })\n\n    function routeHome() {\n        navigate(\"../home/\", { replace: true });\n      }\n\n      async function postData(url, data) {\n        // Default options are marked with *\n        const response = await fetch(url, {\n          method: 'POST', // *GET, POST, PUT, DELETE, etc.\n          headers: {\n            'Content-Type': 'application/json'\n            // 'Content-Type': 'application/x-www-form-urlencoded',\n          },\n          body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n        });\n        return response.json(); // parses JSON response into native JavaScript objects\n      }\n\n\n    const onSubmit  = (e)    =>  {\n        e.preventDefault()\n        if(values.userName===''||values.password==='')\n        {\n\n            let usernameError=\"\",passwordError =\"\";\n\n            if(values.userName==='')\n                usernameError=\"This field is required\";\n            if(values.password==='')\n                passwordError=\"This field is required\";\n\n            \n            setErrors({\n                username:usernameError,\n                password:passwordError\n            });\n            return;\n        }\n        console.log(values);\n        postData(baseAddress,values).then(x=>{\n                if(x?.variant==='success')\n                {\n                    // accessToken=x.accessToken;\n                    console.log(x);\n\n                    localStorage.setItem('accessToken',x.accessToken);\n                    localStorage.setItem('actor',values.actor);\n                    setActor(values.actor);\n                    loginFunct();\n                    routeHome();\n                }\n                else\n                {\n                    setErrors({\n                        final:\"* Username or password is incorrect\"\n                    });\n                }\n\n            })\n        \n\n    }\n    return (\n            <Form onSubmit={onSubmit} className=\"w-25 m-auto mt-5\">\n                <Form.Select className=\"mb-3\" name=\"actor\" value={values.actor} onChange={handleChange} >\n                    <option value=\"student\">Student</option>\n                    <option value=\"department\">Department</option>\n                </Form.Select>\n                <Form.Group className={`mb-3`}>\n                    <Form.Label>Username</Form.Label>\n                    <Form.Control type=\"text\" onChange={handleChange} name=\"userName\" value={values.userName} placeholder=\"Username\" isInvalid={!!errors.username}/>\n                    <Form.Control.Feedback type=\"invalid\">\n                        {errors.username}\n                    </Form.Control.Feedback>\n                </Form.Group>\n                {/* <Form.Group className={`mb-3 ${values.actor===\"student\"?\"d-none\":\"\"}`}>\n                    <Form.Label>Department ID</Form.Label>\n                    <Form.Control type=\"text\" onChange={handleChange} name=\"deptId\" value={values.deptId} placeholder=\"Department ID\" />\n                </Form.Group> */}\n                <Form.Group className=\"mb-3\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type=\"password\" onChange={handleChange} name=\"password\" value={values.password}  placeholder=\"Password\" isInvalid={!!errors.password}/>\n                    <Form.Control.Feedback type=\"invalid\">\n                        {errors.password}\n                    </Form.Control.Feedback>\n                </Form.Group>\n                <Form.Group className=\"position-absolute\">\n                    <Form.Control className=\"d-none\" isInvalid={!!errors.final}/>\n                    <Form.Control.Feedback type=\"invalid\">\n                        {errors.final}\n                    </Form.Control.Feedback>\n                </Form.Group>\n                <Button variant=\"primary\" type=\"submit\" className=\"mt-4\">\n                    Submit\n                </Button>\n            </Form>\n    )\n}\n\nexport default LoginForm;\n","import LoginForm from \"../components/LoginForm\";\n\nconst LoginPage = ({loginFunct,setActor}) => {\n    return (\n        <div>\n            <LoginForm loginFunct={()=>loginFunct() } setActor={(actor)=>setActor(actor)}></LoginForm>\n        </div>\n\n    )\n}\n\nexport default LoginPage\n","import {React, useState} from 'react';\nimport { useForm } from '../customHooks/UseForm';\nimport { Form, Button, Modal, FloatingLabel } from 'react-bootstrap';\nimport  {   useEffect} from 'react';\n\n\nconst AddComplaint = ({initialCall,departments,routeLogin}) => {\n\n    async function postComplaint(url=\"/api/student/addcomplaint\",data) {\n        // Default options are marked with *\n        const response = await fetch(url, {\n          method: 'POST', // *GET, POST, PUT, DELETE, etc.\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${localStorage.getItem('accessToken')}`\n\n            // 'Content-Type': 'application/x-www-form-urlencoded',\n          },\n          body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n        });\n        if(response.status!==200)\n        {\n            routeLogin();\n            return null;\n        }\n        return response.json(); // parses JSON response into native JavaScript objects\n      }\n    useEffect(() => {\n        console.log(departments);\n        \n    }, [departments])\n    const [values,  handleChange]   =   useForm({\n        title:\"\",\n        depId:\"\",\n        description:\"\"\n    })\n    const [errors,setErrors] = useState({\n        department:\"\",\n        title:\"\",\n        description:\"\"\n    })\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => {\n        setShow(false);\n        setErrors({\n            department:\"\",\n            title:\"\",\n            description:\"\"\n        });\n    }\n    const handleShow = () => setShow(true);\n\n    const onSubmit   =   async  (e)  =>\n    {\n        let departmentError=\"\",titleError =\"\",descriptionError =\"\";\n\n        if(values.depId==='' || values.title==='' || values.description===''){\n            if(values.depId==='')\n                departmentError=\"Please select any department\";\n            if(values.title==='')\n                titleError=\"This field is required\";\n            if(values.description==='')\n                descriptionError=\"This field is required\";\n\n            setErrors({\n                department:departmentError,\n                title:titleError,\n                description:descriptionError\n            });\n            e.preventDefault();\n            return;\n\n        }\n\n        else{\n            \n            // console.log(values);\n            let res =   await   postComplaint(\"/api/student/addcomplaint\",values);\n            console.log(res);\n            setShow(false);\n            if(res!==null)\n            {\n    \n                initialCall();\n            }\n        }\n        \n    }\n    return (\n        <>\n        <div className=\"d-flex mt-3 justify-content-end\">\n        <Button variant=\"primary\" onClick={handleShow} className=\"mr-0 w-\">\n        Add Complaint\n        </Button>\n        </div>\n        <Modal show={show} onHide={handleClose} centered size=\"xl\">\n            <Form onSubmit={onSubmit}>\n                <Modal.Header closeButton>\n                <Modal.Title>Add Complaint</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <FloatingLabel label=\"Department\" className=\"mb-3\">\n                        <Form.Select name=\"depId\" value={values.depId} onChange={handleChange} isInvalid={!!errors.department}>\n                        {/* <option value=\"1\">Sample1</option>\n                        <option value=\"2\">Sample2</option> */}\n                        <option value=\"\">Select Department</option>\n                        {departments.map((department)=>(\n                            <option key={department[0]} value={department[0]}>{department[1]}</option>\n                            ))}\n                        </Form.Select>\n                        <Form.Control.Feedback type=\"invalid\">\n                        {errors.department}\n                        </Form.Control.Feedback>\n                    </FloatingLabel>\n                    <Form.Group className=\"mb-3\">\n                        <FloatingLabel label=\"Title\">\n                        <Form.Control type=\"text\" onChange={handleChange} name=\"title\" value={values.title}  placeholder=\"Title\" isInvalid={!!errors.title}/>\n                        <Form.Control.Feedback type=\"invalid\">\n                        {errors.title}\n                        </Form.Control.Feedback>\n                        </FloatingLabel>\n                    </Form.Group>\n                    <FloatingLabel label=\"Description\">\n                        <Form.Control as=\"textarea\" name=\"description\" value={values.description} onChange={handleChange} placeholder=\"Description\"style={{ height: '200px' }} isInvalid={!!errors.description}/>\n                        <Form.Control.Feedback type=\"invalid\">\n                        {errors.description}\n                        </Form.Control.Feedback>\n                    </FloatingLabel>\n                </Modal.Body>\n                <Modal.Footer>\n                <Button variant=\"secondary\" onClick={handleClose}>\n                    Close\n                </Button>\n                <Button variant=\"primary\" type=\"submit\">\n                    Add\n                </Button>\n                </Modal.Footer>\n            </Form>\n        </Modal>\n        </>\n    )\n}\n\n\nexport default AddComplaint;","import React from 'react';\nimport '../styles/ListItem.css'\nimport { Button } from 'react-bootstrap'; \n\nconst ListItem = ({complaint,deleteFunct}) => {\n\n    return (\n        <div className=\"complaint-item p-3 mt-3\">\n           <div className=\"complaint-title\">{complaint['title: ']}</div>\n           <div className={\"complaint-details mt-1 \"+complaint['status: ']}>\n           <div className=\"complaint-status\"><div className=\"status-icon\"></div><div className=\"status-text\"></div></div>\n           </div>\n           {/* <Button variant=\"danger\" onClick={()=>{deleteFunct(complaint['complaint ID'])}} className=\"right-align\">Delete</Button> */}\n       </div>\n    )\n}\n\n\nexport default ListItem;","import {Link} from 'react-router-dom';\nimport React from 'react';\nimport ListItem from \"./ListItem\";\nimport { useEffect } from 'react';\n\n\n\nconst ComplaintList = ({actor,  list}) => {\n\n    \n    useEffect(() => {\n        console.log(list);\n    }, [list])\n    return (\n        <>\n                {\n                    list.complaints?.map((complaint)=>{\n                        return (\n                            <div className=\"container\">\n                                <div className=\"row flex-box\">\n                                    <Link className=\"col-8\" to={`/home/complaint?id=${complaint['complaint ID: ']}`} className=\"text-decoration-none\">\n                                        <ListItem className=\"col-8\" key={complaint['complaint ID: ']} complaint={complaint} />\n                                    </Link>\n                                </div>\n                            </div>\n\n                        )\n                    })\n                }\n        </>\n    )\n}\n\n\nexport default ComplaintList;","import React from 'react';\nimport { InputGroup, FormControl } from 'react-bootstrap';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\n\n\n\nconst SearchComponent = (props) => {\n\n    return (\n        <InputGroup className=\"w-100 mr-0\">\n        <InputGroup.Text className=\"bg-dark text-white\">\n                <FontAwesomeIcon icon={faSearch} />\n        </InputGroup.Text>\n        <FormControl placeholder=\"Search complaint ...\" onChange={props.nameChange} />  \n        </InputGroup>    \n         \n     );   \n}\n\n\nexport default SearchComponent;","import React from 'react';\nimport { Form } from 'react-bootstrap';\n\n\n\nconst FilterComponent = (props) => {\n\n    return (\n        <Form className=\"align-self-center my-2\">\n            <div>\n            <Form.Check className=\"mx-2\" inline label=\"Pending\" name=\"status\" type=\"checkbox\" id=\"checkbox1\" value=\"pending\" defaultChecked onChange={props.statusChange}/>\n            <Form.Check className=\"mx-2\" inline label=\"On Process\" name=\"status\" type=\"checkbox\" id=\"checkbox2\" value=\"onProcess\" defaultChecked  onChange={props.statusChange}/>\n            <Form.Check className=\"mx-2\" inline label=\"Resolved\" name=\"status\" type=\"checkbox\" id=\"checkbox3\" value=\"resolved\" defaultChecked  onChange={props.statusChange}/>\n            <Form.Check className=\"mx-2\" inline label=\"Rejected\" name=\"status\" type=\"checkbox\" id=\"checkbox4\" value=\"rejected\" defaultChecked  onChange={props.statusChange}/>\n            </div>\n        </Form>   \n           \n    );  \n}\n\n\nexport default FilterComponent;","import {Row, Col, OverlayTrigger, Tooltip} from 'react-bootstrap';\nimport AddComplaint from \"../components/AddComplaint\";\nimport ComplaintList from \"../components/ComplaintList\";\nimport SearchComponent from \"../components/SearchComponent\";\nimport FilterComponent from \"../components/FilterComponent\";\nimport ReactStars from \"react-rating-stars-component\";\nimport { useEffect,useState } from 'react';\nimport { useNavigate } from 'react-router';\n\nconst HomePage = ({logoutFunct,actor}) => {\n    const navigate  =   useNavigate()\n    const [list, setlist] = useState({\n      \"complaints\":[],\n      \"avgRating\":0\n    });\n    const [rating,setrating] = useState(false,);\n    const [search,setsearch] = useState(\"\",);\n    const [filter,setfilter] = useState({\n      pending:true,\n      onProcess:true,\n      resolved:true,\n      rejected:true\n    },);\n    const [filteredlist, setfilteredlist] = useState({\n      \"complaints\":[]\n    });\n    const [departments, setdepartments] = useState([[]]);\n    function routeLogin() {\n        logoutFunct();\n        navigate(\"../\", { replace: true });\n      }\n\n  async function nameChange(e){\n    setsearch(e.target.value);\n  }\n\n  async function statusChange(e){\n    setfilter(prevstate=>({\n      ...prevstate,\n      [e.target.value]:e.target.checked\n    }));\n    \n  }\n\n  async function filterComplaints(){\n    let complaints1 = list.complaints.filter((complaint)=>{\n      return (\n               ((search===\"\")||(complaint['title: '].toLowerCase().startsWith(search.toLowerCase()))) &&\n               (filter[complaint['status: ']])\n              )\n    })\n    setfilteredlist(prevstate=>({\n      ...prevstate,\n      complaints:complaints1\n    }));\n  }\n\n    async function getComplaint(url=actor==='student'?\"/api/student/getcomplaints\":\"/api/department/getcomplaints\") {\n        const response = await fetch(url, {\n          method: 'GET', // *GET, POST, PUT, DELETE, etc.\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('accessToken')}`\n\n          },\n        });\n        \n        if(response.status===200)\n        {\n            return response.json(); // parses JSON response into native JavaScript objects\n        }\n        else\n        {\n            routeLogin()\n            return null;\n        }\n      }\n\n          async function getDepartments(url=\"/api/student/addcomplaint\") {\n        const response = await fetch(url, {\n          method: 'GET', // *GET, POST, PUT, DELETE, etc.\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('accessToken')}`\n\n          },\n        });\n        return response.json(); // parses JSON response into native JavaScript objects\n      }\n    const initialCall =  async () => {\n        if(!localStorage.getItem('accessToken'))\n        {\n            routeLogin();\n            return\n        }\n        let list1;\n        list1 =  await getComplaint();\n        setlist(list1);\n        setrating(true);\n        setfilteredlist(list1);\n        if(actor==='student')\n        {\n          let departments1;\n          departments1  = await getDepartments()\n          setdepartments(departments1);\n        }\n    }\n    useEffect(()=>{\n      initialCall();\n    }, [])\n    useEffect(()=>{\n      filterComplaints();\n    }, [search,filter])\n    \n    return (\n        <>\n            <Row className=\"mt-4\">\n                <Col sm={7}><SearchComponent  nameChange={nameChange} /></Col>\n                <Col className=\"d-flex justify-content-end\"><FilterComponent statusChange={statusChange}/></Col>\n            </Row>\n            {actor==='student'&&<AddComplaint initialCall={()=>initialCall()} departments={departments} routeLogin={()=>routeLogin()}/>}\n            {rating&&actor==='department'&&\n            <>\n              <OverlayTrigger key=\"1\" placement=\"right\" overlay={\n                  <Tooltip>\n                    {list.avgRating.toFixed(2)}\n                  </Tooltip>\n                }\n              >\n              <div className=\"d-flex justify-content-end\">\n                <b className=\"m-2\">Rating</b>\n                <ReactStars count={5} value={list.avgRating.toFixed(2)} edit={false} isHalf={true} size={24} activeColor=\"#ffd700\" />\n              </div>\n              </OverlayTrigger>\n            </>}\n            {(filteredlist.complaints.length&&<ComplaintList  actor={actor} list={filteredlist} />) ||\n            <i>No Data found</i>}\n            \n        </>\n\n    )\n}\n\nexport default HomePage;","import {useEffect, useState} from 'react';\nimport { useForm } from '../customHooks/UseForm';\nimport { Form, Button, Modal, FloatingLabel } from 'react-bootstrap';\nimport { useNavigate } from 'react-router';\n\n\n\nconst EditComplaint = (props) => {\n    const navigate  =   useNavigate()\n    function routeLogin() {\n        props.logoutFunct();\n        navigate(\"../../\", { replace: true });\n      }\n    const [values,  handleChange]   =   useForm({\n        // title:props.complaint.title,\n        // department:props.complaint.depId,\n        description:props.complaint.description\n    })\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => {\n        setShow(false);\n        // values.title=props.complaint.title;\n        // values.department=props.complaint.department;\n        values.description=props.complaint.description;\n    }\n    const handleShow = () => setShow(true);\n\n    // const [departments, setDepartments] = useState([])\n\n    const onSubmit   =  async   (e)  =>\n    {\n        e.preventDefault();\n        setShow(false);\n        console.log(values);\n        let obj={\n            complaint_id:props.complaint.id,\n            description:values.description\n        }\n        let res =   await   postEdit('/api/student/editcomplaint',obj)\n        console.log(res);\n        if(res!==null)\n        {\n            props.logID();\n        }\n    }\n    async function postEdit(url, data) {\n        // Default options are marked with *\n        const response = await fetch(url, {\n          method: 'POST', // *GET, POST, PUT, DELETE, etc.\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${localStorage.getItem('accessToken')}`\n            // 'Content-Type': 'application/x-www-form-urlencoded',\n          },\n          body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n        });\n        if(response.status!==200)\n        {\n            routeLogin()\n            return null;\n        }\n        return response.json(); // parses JSON response into native JavaScript objects\n      }\n\n    useEffect(() => {\n        if(!localStorage.getItem('accessToken'))\n        {\n            routeLogin()\n            return\n        }\n\n    }, [])\n\n    return (\n        <>\n        <Button variant=\"primary\" onClick={handleShow} className=\"m-3 px-3\">\n        Edit\n        </Button>\n        <Modal show={show} onHide={handleClose} centered size=\"lg\">\n            <Form onSubmit={onSubmit}>\n                <Modal.Header closeButton>\n                <Modal.Title>Edit Complaint</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    {/* <FloatingLabel label=\"Department\">\n                        <Form.Select className=\"mb-3\" name=\"department\" value={values.department} onChange={handleChange}> */}\n                        {/* <option value=\"1\">Sample1</option>\n                        <option value=\"2\">Sample2</option> */}\n                        {/* <option value=\"\">--Select Department--</option>\n                        {departments.map((department)=>{\n                            return  <option key={department[0]} value={department[0]}>{department[1]}</option>\n                        })} */}\n                        \n                        {/* </Form.Select>\n                    </FloatingLabel> */}\n                    {/* <Form.Group className=\"mb-3\">\n                        <FloatingLabel label=\"Title\">\n                        <Form.Control type=\"text\" onChange={handleChange} name=\"title\" value={values.title}  placeholder=\"Title\" />\n                        </FloatingLabel>\n                    </Form.Group> */}\n                    <FloatingLabel label=\"Description\">\n                        <Form.Control as=\"textarea\" name=\"description\" value={values.description} onChange={handleChange} placeholder=\"Description\"style={{ height: '200px' }}/>\n                    </FloatingLabel>\n                </Modal.Body>\n                <Modal.Footer>\n                <Button variant=\"secondary\" onClick={handleClose}>\n                    Close\n                </Button>\n                <Button variant=\"primary\" type=\"submit\">\n                    Save\n                </Button>\n                </Modal.Footer>\n            </Form>\n        </Modal>\n        </>\n    )\n}\n\n\nexport default EditComplaint;","import {React, useState} from 'react';\nimport { useForm } from '../customHooks/UseForm';\nimport { Form, Button, Modal, FloatingLabel } from 'react-bootstrap';\nimport  {useNavigate} from  \"react-router-dom\";\nimport  {   useEffect} from 'react';\nimport { propTypes } from 'react-bootstrap/esm/Image';\n\n\nconst ResubmitComplaint = (props) => {\n\n    const navigate  =   useNavigate()\n\n    function routeHome() {\n        // logoutFunct();\n        navigate(\"../home\", { replace: true });\n      }\n    \n    useEffect(() => {\n        setShow(props.resubmit);\n    }, [props.resubmit])\n\n    const [values,  handleChange]   =   useForm({\n        comment:\"\"\n    })\n    const [show,setShow] = useState(props.resubmit);\n    const [resubmit, setResubmit] = useState(false);\n\n    const handleClose = () => {\n        setResubmit(false);\n        props.submitRating();\n    }\n\n    const onSubmit   =  async   (e)  =>\n    {\n        e.preventDefault();\n        console.log(values);\n        let obj={\n            complaint_id:props.complaint.id,\n            comment:values.comment\n        }\n        let res =   await   postResubmit('/api/student/resubmitcomplaint',obj)\n        console.log(res);\n        if(res!==null)\n        {\n            routeHome();\n        }\n    }\n    async function postResubmit(url, data) {\n        // Default options are marked with *\n        const response = await fetch(url, {\n          method: 'POST', // *GET, POST, PUT, DELETE, etc.\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${localStorage.getItem('accessToken')}`\n            // 'Content-Type': 'application/x-www-form-urlencoded',\n          },\n          body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n        });\n        if(response.status!==200)\n        {\n            props.routeLogin()\n            return null;\n        }\n        return response.json(); // parses JSON response into native JavaScript objects\n    }\n    return (\n        <>\n        <Modal show={show} onHide={handleClose} centered>\n            <Form onSubmit={onSubmit}>\n                <Modal.Header closeButton>\n                <Modal.Title>Re-Submit Complaint</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    {!resubmit&&<div>Your rating seems to be too low. Do you want to re-submit the complaint?</div>}\n                    {resubmit&&\n                    <FloatingLabel label=\"Comment\">\n                        <Form.Control as=\"textarea\" name=\"comment\" value={values.comment} onChange={handleChange} placeholder=\"Comment\"style={{ height: '100px' }}/>\n                    </FloatingLabel>}\n                    \n                </Modal.Body>\n                <Modal.Footer>\n                {!resubmit&&\n                <div>\n                    <Button variant=\"primary\" className=\"mx-1\" onClick={handleClose}>\n                        No\n                    </Button>\n                    <Button variant=\"primary\" className=\"mx-1\" onClick={()=>{setResubmit(true)}}>\n                        Yes\n                    </Button>\n                </div>\n                }\n                {resubmit&&\n                <div>\n                    <Button variant=\"primary\" className=\"mx-1\" onClick={handleClose}>\n                        Close\n                    </Button>\n                    <Button variant=\"success\" className=\"mx-1\" onClick={onSubmit}>\n                        ReSubmit\n                    </Button>\n                </div>\n                }\n                \n                \n                </Modal.Footer>\n            </Form>\n        </Modal>\n        </>\n    )\n}\n\n\nexport default ResubmitComplaint;","import {React, useState} from 'react';\nimport { Button, Card } from 'react-bootstrap';\nimport ReactStars from \"react-rating-stars-component\";\nimport  {useNavigate} from  \"react-router-dom\";\nimport ResubmitComplaint from '../components/ResubmitComplaint';\n\n\nconst RatingComponent = ({complaint,routeLogin}) => {\n    const navigate  =   useNavigate()\n    function routeHome() {\n        // logoutFunct();\n        navigate(\"../home\", { replace: true });\n      }\n    const [rating,setRating] = useState(0);\n    const [resubmit, setResubmit] = useState(false);\n\n    const ratingChanged = (newRating) => {\n        setRating(newRating);\n    }\n\n    const submitRating = async() =>{\n        console.log(rating);\n        let obj={\n            id:complaint.id,\n            stars:rating\n        }\n        let res =   await   postRating('/api/student/rate',obj);\n        console.log(res);\n        routeHome();\n    }\n\n    const checkRating =    async () => {\n        if(rating<=2){\n            setResubmit(true);\n        }\n        else\n            submitRating();\n        \n    }\n    async function postRating(url, data) {\n        // Default options are marked with *\n        const response = await fetch(url, {\n          method: 'POST', // *GET, POST, PUT, DELETE, etc.\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${localStorage.getItem('accessToken')}`\n          },\n          body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n        });\n        if(response.status!==200)\n        {\n            routeLogin()\n            return null;\n        }\n        return response.json(); // parses JSON response into native JavaScript objects\n      }\n    return (\n        <>\n            <Card className=\"mt-5 text-center w-50\">\n            <Card.Header className=\"bg-dark text-white\">Feedback</Card.Header>\n            <Card.Body>\n                <Card.Text>\n                 Rate from 1-5\n                </Card.Text>\n                <div className=\"d-flex justify-content-center\">\n                    <ReactStars count={5} onChange={ratingChanged} size={30} activeColor=\"#ffd700\" />\n                </div>\n                <Button onClick={checkRating} className=\"mt-3\">Submit</Button>\n            </Card.Body>\n            </Card>\n            <ResubmitComplaint submitRating={submitRating} resubmit={resubmit} routeLogin={()=>routeLogin()} complaint={complaint}/>\n        </>\n\n    )\n}\n\nexport default RatingComponent;","import {useEffect, useState} from 'react';\nimport { useForm } from '../customHooks/UseForm';\nimport { Form, Button, Modal, FloatingLabel } from 'react-bootstrap';\nimport { useNavigate } from 'react-router';\n\n\nconst EditStatusComponent = ({complaint,logoutFunct,logID}) => {\n    const navigate  =   useNavigate()\n    const [status, setStatus] = useState([[]])\n    function routeLogin() {\n        logoutFunct();\n        navigate(\"../../\", { replace: true });\n      }\n      const [values,  handleChange]   =   useForm({\n        // title:complaint.title,\n        // department:complaint.depId,\n        status:complaint.status\n    })\n    const handleClose = () => {\n        setShow(false);\n        // values.title=complaint.title;\n        // values.department=complaint.department;\n        values.status=complaint.status;\n    }\n    const [show, setShow] = useState(false);\n    const handleShow = () => setShow(true);\n\n    const onSubmit   =  async   (e)  =>\n    {\n        e.preventDefault();\n        setShow(false);\n        // console.log(values);\n        let obj={\n            complaint_id:complaint.id,\n            status:values.status\n        }\n        let res =   await   postEditStatus('/api/department/editstatus',obj)\n        console.log(res);\n        if(res!==null)\n        {\n            logID();\n        }\n    }\n\n    async function postEditStatus(url, data) {\n        // Default options are marked with *\n        const response = await fetch(url, {\n          method: 'POST', // *GET, POST, PUT, DELETE, etc.\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${localStorage.getItem('accessToken')}`\n            // 'Content-Type': 'application/x-www-form-urlencoded',\n          },\n          body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n        });\n        if(response.status!==200)\n        {\n            routeLogin()\n            return null;\n        }\n        return response.json(); // parses JSON response into native JavaScript objects\n      }\n\n      async function getStatus(url=\"/api/department/editstatus\") {\n        // Default options are marked with *\n        const response = await fetch(url, {\n          method: 'GET', // *GET, POST, PUT, DELETE, etc.\n          headers: {\n            // 'Content-Type': 'application/json',\n            'Authorization': `Bearer ${localStorage.getItem('accessToken')}`\n\n            // 'Content-Type': 'application/x-www-form-urlencoded',\n          },\n        //   body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n        });\n        if(response.status!==200)\n        {\n            routeLogin();\n        }\n        return response.json(); // parses JSON response into native JavaScript objects\n      }\n\n      const initFunct =   async   ()  =>  {\n            let res   =   await   getStatus();\n            setStatus(res);\n            // console.log(res);\n\n      }\n\n    useEffect(() => {\n        if(!localStorage.getItem('accessToken'))\n        {\n            routeLogin()\n            return\n        }\n        else\n        {\n            initFunct()\n        }\n\n    }, [])\n\n    return (\n        <>\n        <Button variant=\"primary\" onClick={handleShow} className=\"mr-0 mt-3\">\n        Edit Status\n        </Button>\n        <Modal show={show} onHide={handleClose} centered>\n            <Form onSubmit={onSubmit}>\n                <Modal.Header closeButton>\n                <Modal.Title>Edit Status</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <FloatingLabel label=\"Status\">\n                        <Form.Select className=\"mb-3\" name=\"status\" value={values.status} onChange={handleChange}>\n                        <option value=\"\">--Select Status--</option>\n                        {status.map((status)=>{\n                            return  <option key={status[0]} value={status[0]}>{status[0]}</option>\n                        })}\n                        </Form.Select>\n                    </FloatingLabel>\n                </Modal.Body>\n                <Modal.Footer>\n                <Button variant=\"secondary\" onClick={handleClose}>\n                    Close\n                </Button>\n                <Button variant=\"primary\" type=\"submit\">\n                    Save\n                </Button>\n                </Modal.Footer>\n            </Form>\n        </Modal>\n        </>\n    )\n}\n\nexport default EditStatusComponent\n","import { useNavigate } from 'react-router';\nimport '../styles/BackButton.css'\n\n\n\nconst BackButton = () => {\n    const navigate  =   useNavigate()\n\n    function routeHome() {\n        navigate(\"../home\", { replace: true });\n    }\n\n    \n    return (\n        <div class=\"back-button\" onClick={routeHome}>\n        <div class=\"arrow-wrap\">\n            <span class=\"arrow-part-1\"></span>\n            <span class=\"arrow-part-2\"></span>\n            <span class=\"arrow-part-3\"></span>\n        </div>\n        </div>\n    )\n}\n\n\nexport default BackButton;","import {useEffect, useState} from 'react';\nimport { useForm } from '../customHooks/UseForm';\nimport { Form, Button, Modal, FloatingLabel } from 'react-bootstrap';\nimport { useNavigate } from 'react-router';\n\n\n\nconst DeleteComplaint = (props) => {\n    const navigate  =   useNavigate()\n    function routeLogin() {\n        props.logoutFunct();\n        navigate(\"../../\", { replace: true });\n      }\n    function routeHome() {\n        navigate(\"../\", { replace: true });\n    }\n\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => {\n        setShow(false);\n        // values.title=props.complaint.title;\n        // values.department=props.complaint.department;\n    }\n    const handleShow = () => setShow(true);\n\n    // const [departments, setDepartments] = useState([])\n\n    const deleteFunct=  async   (id)=>{\n        console.log(id);\n        let res =   await   postDelete('/api/student/deletecomplaint',{id:id});\n        setShow(false);\n        console.log(res);\n        if(res.message!=='Complaint deleted successfully')\n        {\n            \n            routeLogin();\n        }\n        else\n        {\n            routeHome();\n        }\n    }\n    async function postDelete(url, data) {\n        // Default options are marked with *\n        const response = await fetch(url, {\n          method: 'POST', // *GET, POST, PUT, DELETE, etc.\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${localStorage.getItem('accessToken')}`\n            // 'Content-Type': 'application/x-www-form-urlencoded',\n          },\n          body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n        });\n        return response.json(); // parses JSON response into native JavaScript objects\n      }\n\n    useEffect(() => {\n        if(!localStorage.getItem('accessToken'))\n        {\n            routeLogin()\n            return\n        }\n\n    }, [])\n\n    return (\n        <>\n        <Button variant=\"danger\" onClick={handleShow} className=\"m-3 px-2\">\n        Delete\n        </Button>\n        <Modal show={show} onHide={handleClose} centered>\n                <Modal.Header closeButton>\n                <Modal.Title>Delete Complaint</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    Are you sure you want to delete this complaint?\n                </Modal.Body>\n                <Modal.Footer>\n                <Button variant=\"secondary\" onClick={handleClose}>\n                    Close\n                </Button>\n                <Button variant=\"danger\" onClick={()=>deleteFunct(props.complaint.id)}>\n                    Delete\n                </Button>\n                </Modal.Footer>\n\n        </Modal>\n        </>\n    )\n}\n\n\nexport default DeleteComplaint;","import EditComplaint from \"../components/EditComplaint\";\nimport RatingComponent from \"../components/RatingComponent\";\nimport { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom'\nimport { useNavigate } from \"react-router\";\nimport EditStatusComponent from \"../components/EditStatusComponent\";\nimport BackButton from \"../components/BackButton\";\nimport DeleteComplaint from \"../components/DeleteComplaint\";\nimport '../styles/TitleStatus.css'\n\nconst ComplaintPage = ({logoutFunct,actor}) => {\n    const navigate  =   useNavigate()\n    function routeLogin() {\n        logoutFunct();\n        navigate(\"../../\", { replace: true });\n      }\n    let initFunct=() => {\n        let id1=location.search.split('=')[1];\n        setId(id1)\n    }\n    const [complaint, setComplaint] = useState({})\n\n    let logID=async()=>{\n        console.log(id);\n        if(id!==0)\n        {\n           let res  =   await postDescription(actor==='student'?'/api/student/getdescriptions':'/api/department/getdescriptions',{complaint_id:id})\n           console.log(res);\n           setComplaint({\n               depId:res.depId,\n               description:res.description,\n               feedback:res.feedback,\n               id:res.id,\n               stars:res.stars,\n               status:res.status,\n               title:res.title\n           })\n        //    console.log(complaint);\n        }\n    }\n\n\n    async function postDescription(url, data) {\n        // Default options are marked with *\n        const response = await fetch(url, {\n          method: 'POST', // *GET, POST, PUT, DELETE, etc.\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${localStorage.getItem('accessToken')}`\n          },\n          body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n        });\n        if(response.status!==200)\n        {\n            routeLogin()\n            return null;\n        }\n        return response.json(); // parses JSON response into native JavaScript objects\n      }\n    const [id,setId] = useState(0);\n    const location = useLocation();\n    useEffect(() => {\n        initFunct()\n    }, [])\n    useEffect(()=>{\n        logID()\n    }, [id])\n\n\n    return (\n        <>\n            <BackButton/>\n            <div className=\"w-75 m-auto\">\n            <h2 className=\"pl-0 my-4\">{complaint.title}<span className={\"title-status \"+complaint.status}></span></h2>\n            <p>\n            {complaint.description}\n            </p>\n            {complaint.feedback&&\n            <div className=\"comment\">\n                <b>Comments</b>\n                <p>{complaint.feedback}</p>\n            </div>\n            }\n            {actor==='student'&&complaint.status==='pending'&&\n            <div className=\"d-flex mt-5 justify-content-end\">\n                <EditComplaint complaint={complaint} logoutFunct={()=>logoutFunct()} logID={()=>logID()}/>\n                <DeleteComplaint complaint={complaint} logoutFunct={()=>logoutFunct()} />\n            </div>\n            }\n            {actor==='student'&&complaint.status==='resolved'&&<div className=\"d-flex justify-content-around mt-5\"><RatingComponent  complaint={complaint} routeLogin={()=>routeLogin()}/></div>}\n            {actor==='department'&&\n            <div className=\"d-flex mt-5 justify-content-end\">\n                <EditStatusComponent complaint={complaint} logoutFunct={()=>logoutFunct()} logID={()=>logID()}/> \n            </div>\n            }\n            </div>\n        </>\n\n\n    )\n}\n\nexport default ComplaintPage;","import { Navbar, Nav } from 'react-bootstrap';\nimport {Link} from 'react-router-dom';\n\n\n\nconst NavBar = ({log,logoutFunct}) => {\n\n    return (\n      <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n        <Navbar.Brand as={Link} to=\"/\">CMS</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\" className=\"justify-content-end\">\n          {!log&&<Nav>\n            <Nav.Link as={Link} to=\"/\">Login</Nav.Link>\n            <Nav.Link as={Link} to=\"/register\">Register</Nav.Link>\n          </Nav>}\n          {log&&\n            <Nav>\n              <Nav.Link as={Link} onClick={async()=>await logoutFunct()} to=\"/\">Logout</Nav.Link>\n            </Nav>\n          }\n        </Navbar.Collapse>\n      </Navbar>\n    )\n}\n\nexport default NavBar;","import {Routes, Route,BrowserRouter as Router} from 'react-router-dom';\nimport { Container } from \"react-bootstrap\";\nimport './App.css';\nimport RegistrationPage from './pages/RegistrationPage';\nimport LoginPage from './pages/LoginPage';\nimport HomePage from './pages/HomePage';\nimport ComplaintPage from './pages/ComplaintPage';\nimport NavBar from './components/NavBar';\nimport { useState } from 'react';\n\nfunction App() {\n  const [log, setlog] = useState(localStorage.getItem('log')||false)\n  const [actor, setActor] =useState(localStorage.getItem('actor')||'student')\n\n  const logoutPost  = async () =>  {\n    const url='/logout'\n    let data={\n      actor:localStorage.getItem('actor')\n    }\n    let res = await postData(url,data)\n    console.log(res);\n  }\n\n  async function postData(url, data) {\n    // Default options are marked with *\n    const response = await fetch(url, {\n      method: 'POST', // *GET, POST, PUT, DELETE, etc.\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${localStorage.getItem('accessToken')}`\n\n        // 'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n    });\n    return response.json(); // parses JSON response into native JavaScript objects\n  }\n  return (\n    <>\n        <Router>\n          <NavBar log={log} logoutFunct={async()=>{await logoutPost();setlog(0);}}></NavBar>\n          <Container className=\"container\">\n            <Routes>\n              <Route path='/register' element={<RegistrationPage loginFunct={()=>{setlog(1);localStorage.setItem('log',1)}} setActor={(actor)=>setActor(actor)}/>} /> \n              <Route path='/home/' element={<HomePage logoutFunct={async ()=>{await logoutPost(); setlog(0);localStorage.clear()}} actor={actor}/>} /> \n              <Route path='/home/complaint' element={<ComplaintPage logoutFunct={async ()=>{await logoutPost(); setlog(0);localStorage.clear()}} actor={actor}/>} />\n              <Route path='/'  element={<LoginPage  loginFunct={()=>{setlog(1);localStorage.setItem('log',1)}}  setActor={(actor)=>setActor(actor)}/>} />    \n            </Routes>\n          </Container>\n        </Router> \n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}